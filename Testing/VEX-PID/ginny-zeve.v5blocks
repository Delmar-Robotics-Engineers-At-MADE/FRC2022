{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"w;hW/baJn;XttdyoB{K3\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">P</variable><variable type=\"\" id=\"P)jM?I20:B!adS0(K:85\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">error</variable><variable type=\"broadcast_msg\" id=\"u8@x2=9V3D6+f^T|*ST0\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable><variable type=\"broadcast_msg\" id=\"`YJ+NxTIuwl[$m,5f6vf\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">HelloWorld</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_variables_set_variable\" id=\"~mI.}m%cX2+n)1s6;jw~\"><field name=\"VARIABLE\" id=\"w;hW/baJn;XttdyoB{K3\" variabletype=\"\">P</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"ZkYq9e4SHS5.HQF}Nm}5\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_control_forever\" id=\"KQPUkotJ8%?qzmEe.zcJ\"><statement name=\"SUBSTACK\"><block type=\"v5_sensing_snapshot\" id=\"|QkK=}#mA}efhkUr^u@E\"><field name=\"VISION\">Vision21</field><field name=\"SIGNATURE\">SELECT_A_SIG</field><next><block type=\"v5_other_comment\" id=\"N?fBpZ9$?Kc.)g*@MOnJ\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"#z1=7_Se}!4d,`0|gCj(\"><field name=\"comment\">select_a_sig=sig_1</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"[RcO8A$u=W[Iv/QZzQvN\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"II2H]Hg?=ToIAOENI4qS\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"~TX(PJ}Wh]+yIxcDsdQ4\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_clear_row\" id=\"z32@7q/XY--1mIVR$lel\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"=ITL]+6mLqWz#G~h6N-X\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"`b{bBe%+*#C2_oagfQed\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"`Bbn8PqN,S]N:)Oc3NbM\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_object_count\" id=\"B0qm%U{BaPvx9T6P[*,:\"><field name=\"VISION\">Vision21</field></block></value><next><block type=\"v5_control_if_then_else\" id=\")(#4iM#t`)iu.*bW9+5K\"><value name=\"CONDITION\"><block type=\"v5_operator_equal_to\" id=\"Rk0+.D,?0wtbl^b,Budu\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"TGQ81K.~[7sf^cK=.KRH\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_object_count\" id=\"qH~-mDVL}~pwEj[2/L^/\"><field name=\"VISION\">Vision21</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"aX6,Db|adyZ+H:8[h(oh\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_vision_object_index\" id=\"pZnP-?4=CR8:B[F:%BNp\"><field name=\"VISION\">Vision21</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"Kwc_n~-erhKao/_Yk5OM\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"Fr@djU1.@Qvk6uoRAO!~\"><field name=\"VARIABLE\" id=\"P)jM?I20:B!adS0(K:85\" variabletype=\"\">error</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"t;~X//+dRuovtqieVYzr\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_subtract\" id=\"12*dzsOARt}Tslb22*pc\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"|:]SxI#Jg0X1~h4o3lo@\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_vision_object\" id=\"a{#]GD`/z#Le?LTU1ph~\"><field name=\"VISION\">Vision21</field><field name=\"PROPERTY\">centerX</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"SDZo*Mh7+`IOVZXMc[%C\"><field name=\"NUM\">180</field></shadow></value></block></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"*ROLV4!b]HF[e]!bY=HY\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\")*[La|Sqhb=T{OkOCH=K\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_multiply\" id=\"ho_y/1@76d9amKDEYH;Q\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"x#qT)u|8z*fH]y[DIU.U\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"+ieX`+6=3HIheHlN+dX#\"><field name=\"VARIABLE\" id=\"w;hW/baJn;XttdyoB{K3\" variabletype=\"\">P</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"_^fuW^.5Eix-qI_bu~DA\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"N|)UX-oa{h9=d1.#rCa+\"><field name=\"VARIABLE\" id=\"P)jM?I20:B!adS0(K:85\" variabletype=\"\">error</field></block></value></block></value><next><block type=\"v5_drivetrain_turn\" id=\"wedbuZ;12Cb[A|6s2rxn\"><field name=\"TURNDIRECTION\">right</field></block></next></block></next></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_motion_stop_driving\" id=\"]Y%=:vDjfNiRf|M.e{jQ\"></block></statement></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[21],"name":"Vision21","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_1\"},\"range\":2.5},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22},{"port":[1,10,2],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"threewire","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n/*vex-vision-config:begin*/\nvision Vision21 = vision (PORT21, 50);\n/*vex-vision-config:end*/\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ngyro DrivetrainGyro = gyro(Brain.ThreeWirePort.B);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainGyro, 319.19, 320, 40, mm, 1);\n\ncontroller Controller1 = controller(primary);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Gyro\");\n  DrivetrainGyro.calibrate();\n  while (DrivetrainGyro.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0, Vision21_objectIndex = 0;\n\nfloat myVariable, P, error;\n\nevent message1 = event();\nevent HelloWorld = event();\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  P = 5.0;\n  while (true) {\n    // No Vision Sensor signature selected\n    // select_a_sig=sig_1\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.clearLine(1);\n    Brain.Screen.setCursor(Brain.Screen.row(), 1);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Vision21.objectCount));\n    if (Vision21.objectCount == 1.0) {\n      Vision21_objectIndex = static_cast<int>(1.0) - 1;\n      error = Vision21.objects[Vision21_objectIndex].centerX - 180.0;\n      Drivetrain.setTurnVelocity((P * error), percent);\n      Drivetrain.turn(right);\n    }\n    else {\n      Drivetrain.stop();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}